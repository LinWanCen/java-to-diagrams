# 解析导出工具配置
# 下面的配置都可以用 JVM 的 -Dkey=value 或环境变量覆盖

# 解析路径 分隔符 Windows ; Mac/Linux : 不建议在这里粘贴因为不会自动转义 \
# diagrams_path=
# language="regexp" 包含文件路径正则
diagrams_path_include=\\.java$
# language="regexp" 排除文件路径正则
diagrams_path_exclude=/util/|/bean/|/dict/|Conf.java|Utils.java$

# 解析 在源码根路径中 分隔符 Windows ; Mac/Linux :
diagrams_solver_src=
# 解析 在 jar 中 分隔符 Windows ; Mac/Linux :
diagrams_solver_jar=
# 解析 自动获取 源码目录
diagrams_solver_auto_src=true
# 解析 自动获取 maven jar，需要设置Maven环境变量
diagrams_solver_auto_jar=true
# 解析 自动获取 maven jar，需要设置Maven环境变量，对每个文件上寻
diagrams_solver_auto_jar_each=false

# 表格
diagrams_excel=true

# 生成文件后缀
diagrams_out_suffix=_diagrams
# 类关系图
diagrams_dot_class=true
# 方法关系图
diagrams_dot=true
# 方法关系图 显示字段
diagrams_dot_field=false
# 关系图 方向
#diagrams_dot_dir=TOP_TO_BOTTOM
diagrams_dot_dir=LEFT_TO_RIGHT

# 思维导图 成员树
diagrams_xmind_tree=true
# 思维导图 调用树
diagrams_xmind_call=true
# 思维导图 类调用树
diagrams_xmind_class_call=true
# 思维导图 显示类名
diagrams_xmind_class=true
# 思维导图 显示标识符
diagrams_xmind_symbol=true
# language="regexp" 思维导图 根方法 包含正则
diagrams_xmind_include=
# language="regexp" 思维导图 根方法 排除正则
diagrams_xmind_exclude=
# language="regexp" 思维导图 方法 包含正则
diagrams_xmind_method_include=
# language="regexp" 思维导图 方法 排除正则
diagrams_xmind_method_exclude=^java|(?:bean|util\\.|dict|Conf)[^(]++\\(
# 思维导图 隐藏调用的其他方法
diagrams_xmind_hide_call_other=true